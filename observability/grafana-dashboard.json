{
  "title": "Hello Birthday - Overview",
  "uid": "hello-birthday-overview",
  "version": 1,
  "schemaVersion": 39,
  "style": "dark",
  "timezone": "browser",
  "editable": true,
  "tags": ["hello-birthday"],
  "templating": {
    "list": [
      {
        "name": "datasource",
        "type": "datasource",
        "query": "prometheus",
        "label": "Prometheus",
        "current": { "text": "Prometheus", "value": "Prometheus" }
      }
    ]
  },
  "panels": [
    {
      "type": "stat",
      "title": "Requests per Second (RPS)",
      "id": 1,
      "gridPos": { "x": 0, "y": 0, "w": 6, "h": 5 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{job=\"hello-birthday-app\"}[5m]))",
          "legendFormat": "RPS",
          "refId": "A"
        }
      ]
    },
    {
      "type": "stat",
      "title": "Error Rate (5xx, %)",
      "id": 2,
      "gridPos": { "x": 6, "y": 0, "w": 6, "h": 5 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "(sum(rate(http_requests_total{job=\"hello-birthday-app\",status=~\"5..\"}[5m])) / sum(rate(http_requests_total{job=\"hello-birthday-app\"}[5m]))) * 100",
          "legendFormat": "5xx %",
          "refId": "A"
        }
      ]
    },
    {
      "type": "stat",
      "title": "Latency p95 (s)",
      "id": 3,
      "gridPos": { "x": 12, "y": 0, "w": 6, "h": 5 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=\"hello-birthday-app\"}[5m])) by (le))",
          "legendFormat": "p95",
          "refId": "A"
        }
      ]
    },
    {
      "type": "timeseries",
      "title": "Requests by Status",
      "id": 4,
      "gridPos": { "x": 0, "y": 5, "w": 12, "h": 8 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "sum by (status) (rate(http_requests_total{job=\"hello-birthday-app\"}[5m]))",
          "legendFormat": "{{status}}",
          "refId": "A"
        }
      ]
    },
    {
      "type": "timeseries",
      "title": "Latency p50/p95/p99 (s)",
      "id": 5,
      "gridPos": { "x": 12, "y": 5, "w": 12, "h": 8 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "histogram_quantile(0.5, sum(rate(http_request_duration_seconds_bucket{job=\"hello-birthday-app\"}[5m])) by (le))",
          "legendFormat": "p50",
          "refId": "A"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=\"hello-birthday-app\"}[5m])) by (le))",
          "legendFormat": "p95",
          "refId": "B"
        },
        {
          "expr": "histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket{job=\"hello-birthday-app\"}[5m])) by (le))",
          "legendFormat": "p99",
          "refId": "C"
        }
      ]
    },
    {
      "type": "stat",
      "title": "PostgreSQL Up",
      "id": 6,
      "gridPos": { "x": 0, "y": 13, "w": 6, "h": 5 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        { "expr": "min(pg_up{job=\"postgresql\"})", "legendFormat": "pg_up", "refId": "A" }
      ]
    },
    {
      "type": "stat",
      "title": "Replication Lag (s)",
      "id": 7,
      "gridPos": { "x": 6, "y": 13, "w": 6, "h": 5 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "targets": [
        {
          "expr": "max(pg_replication_lag{job=\"postgresql\"} OR pg_replication_lag_seconds{job=\"postgresql\"})",
          "legendFormat": "lag",
          "refId": "A"
        }
      ]
    },
    {
      "type": "logs",
      "title": "Recent App Logs (via S3/Collector)",
      "id": 8,
      "gridPos": { "x": 12, "y": 13, "w": 12, "h": 8 },
      "datasource": { "type": "prometheus", "uid": "${datasource}" },
      "options": { "showTime": true, "wrapLogMessage": true },
      "description": "If using Grafana Loki instead of S3, point this to Loki. Kept as placeholder; adjust in your stack."
    }
  ]
}