# --- Main Application Configuration ---
replicaCount: 1

image:
  repository: "" # To be filled in by the pipeline
  pullPolicy: IfNotPresent
  tag: "" # To be filled in by the pipeline

service:
  type: ClusterIP
  port: 80

# --- Advanced Scheduling for the Application ---
# Usually, a stateless app doesn't need dedicated nodes, but the option is here.
app:
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - hello-birthday
            topologyKey: "topology.kubernetes.io/zone"

# --- Database Configuration (Postgres with Zalando Operator) ---
postgres:
  enabled: true
  replicas: 3
  volumeSize: "10Gi"
  version: "15"
  s3WalBucket: "" # To be filled in by the pipeline
  teamId: "birthday-team"

  # Advanced scheduling to ensure DB pods run on dedicated nodes
  scheduling:
    nodeSelector:
      workload: database
    tolerations:
      - key: "workload"
        operator: "Equal"
        value: "database"
        effect: "NoSchedule"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: application
                    operator: In
                    values:
                      - spilo
              topologyKey: "topology.kubernetes.io/zone"

  # Resource requests and limits (critical for production)
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"

  # Pod Disruption Budget for high availability
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  # Connection Pooler
  connectionPooler:
    enabled: true
    numberOfInstances: 2
    mode: "transaction"
    user: "pooler"
    resources:
      requests:
        cpu: "100m"
        memory: "100Mi"
      limits:
        cpu: "200m"
        memory: "200Mi"

  # Enable metrics sidecar for Prometheus
  monitoring:
    enabled: true

# --- OpenTelemetry (ADOT) Collector Configuration ---
# This configuration enables the ADOT collector sub-chart for metrics/logs export.
adot:
  enabled: true
  roleArn: "" # To be filled in by the pipeline (IAM Role for ADOT)
  prometheusEndpoint: "" # To be filled in by the pipeline (AMP remote_write endpoint)
  s3LogsBucket: "" # To be filled in by the pipeline (S3 bucket for logs)

  collector:
    daemonSet: false
    deployment: true

    # Service Account for IRSA binding
    serviceAccount:
      create: true
      name: "adot-collector-sa"
      annotations:
        eks.amazonaws.com/role-arn: "" # Must match roleArn

    config:
      # Exporters: destinations for telemetry data
      exporters:
        awsprometheusremotewrite:
          endpoint: "" # AMP workspace endpoint
        awss3:
          aws_sdk:
            region: "eu-west-1"
            s3_force_path_style: true
          s3_uploader:
            s3_bucket: "" # S3 bucket for logs
            s3_prefix: "logs"
            s3_partition: "minute"

      # Receivers: data sources to scrape/collect
      receivers:
        prometheus:
          config:
            scrape_configs:
              # --- App metrics ---
              - job_name: 'hello-birthday-app'
                scrape_interval: 15s
                metrics_path: /metrics
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels: [ __meta_kubernetes_pod_annotation_app_kubernetes_io_name ]
                    action: keep
                    regex: hello-birthday
                  - source_labels: [ __meta_kubernetes_pod_ready ]
                    action: keep
                    regex: "true"
                  - source_labels: [ __meta_kubernetes_pod_container_port_name ]
                    action: keep
                    regex: http
                  - source_labels: [ __meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number ]
                    action: replace
                    target: __address__
                    replacement: $1:$2

              # --- PostgreSQL metrics (Spilo sidecar) ---
              - job_name: 'postgresql'
                scrape_interval: 30s
                metrics_path: /metrics
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels: [ __meta_kubernetes_pod_label_application ]
                    action: keep
                    regex: spilo
                  - source_labels: [ __meta_kubernetes_pod_container_port_name ]
                    action: keep
                    regex: metrics
                  - source_labels: [ __meta_kubernetes_pod_ready ]
                    action: keep
                    regex: "true"
                  - source_labels: [ __meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number ]
                    action: replace
                    target: __address__
                    replacement: $1:$2

        # File log receiver for container logs
        filelog:
          include: [ /var/log/pods/*/*/*.log ]
          start_at: beginning

      # Services: pipelines to connect receivers and exporters
      service:
        pipelines:
          metrics:
            receivers: [ prometheus ]
            exporters: [ awsprometheusremotewrite ]
          logs:
            receivers: [ filelog ]
            exporters: [ awss3 ]

# --- Ingress Configuration ---
ingress:
  enabled: true
  className: "alb" # AWS Load Balancer Controller ingress class
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  hosts:
    - host: hello-birthday.mydomain.com # Change to your domain
      paths:
        - path: /hello
          pathType: Prefix
        - path: /health
          pathType: Prefix
  tls: []

# --- Database Migration Job Configuration ---
migrations:
  enabled: true